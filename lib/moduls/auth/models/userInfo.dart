class User {  String? result;  UserInfo? userInfo;  List<Services>? services;  User({this.result, this.userInfo, this.services});  User.fromJson(Map<String, dynamic> json) {    result = json['Result'];    userInfo = json['UserInfo'] != null        ? new UserInfo.fromJson(json['UserInfo'])        : null;    if (json['Services'] != null) {      services = <Services>[];      json['Services'].forEach((v) {        services!.add(new Services.fromJson(v));      });    }  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    data['Result'] = this.result;    if (this.userInfo != null) {      data['UserInfo'] = this.userInfo!.toJson();    }    if (this.services != null) {      data['Services'] = this.services!.map((v) => v.toJson()).toList();    }    return data;  }}class UserInfo {  int? id;  int? userId;  String? primaryEamil;  String? userName;  String? shortName;  String? identityType;  int? identity;  String? mobileNo;  int? userType;  int? status;  String? lastLoadTime;  String? departmentId;  String? department;  String? mainDepartmentId;  String? mainDepartment;  String? position;  int? rank;  Null? typeCode;  Null? facultyNo;  Null? faculty;  Null? degreeCode;  bool? isActive;  Null? lastModifiedOn;  int? userStore;  UserInfo(      {this.id,      this.userId,      this.primaryEamil,      this.userName,      this.shortName,      this.identityType,      this.identity,      this.mobileNo,      this.userType,      this.status,      this.lastLoadTime,      this.departmentId,      this.department,      this.mainDepartmentId,      this.mainDepartment,      this.position,      this.rank,      this.typeCode,      this.facultyNo,      this.faculty,      this.degreeCode,      this.isActive,      this.lastModifiedOn,      this.userStore});  UserInfo.fromJson(Map<String, dynamic> json) {    id = json['Id'];    userId = json['UserId'];    primaryEamil = json['PrimaryEamil'];    userName = json['UserName'];    shortName = json['ShortName'];    identityType = json['IdentityType'];    identity = json['Identity'];    mobileNo = json['MobileNo'];    userType = json['UserType'];    status = json['Status'];    lastLoadTime = json['LastLoadTime'];    departmentId = json['DepartmentId'];    department = json['Department'];    mainDepartmentId = json['MainDepartmentId'];    mainDepartment = json['MainDepartment'];    position = json['Position'];    rank = json['Rank'];    typeCode = json['TypeCode'];    facultyNo = json['FacultyNo'];    faculty = json['Faculty'];    degreeCode = json['DegreeCode'];    isActive = json['IsActive'];    lastModifiedOn = json['LastModifiedOn'];    userStore = json['UserStore'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    data['Id'] = this.id;    data['UserId'] = this.userId;    data['PrimaryEamil'] = this.primaryEamil;    data['UserName'] = this.userName;    data['ShortName'] = this.shortName;    data['IdentityType'] = this.identityType;    data['Identity'] = this.identity;    data['MobileNo'] = this.mobileNo;    data['UserType'] = this.userType;    data['Status'] = this.status;    data['LastLoadTime'] = this.lastLoadTime;    data['DepartmentId'] = this.departmentId;    data['Department'] = this.department;    data['MainDepartmentId'] = this.mainDepartmentId;    data['MainDepartment'] = this.mainDepartment;    data['Position'] = this.position;    data['Rank'] = this.rank;    data['TypeCode'] = this.typeCode;    data['FacultyNo'] = this.facultyNo;    data['Faculty'] = this.faculty;    data['DegreeCode'] = this.degreeCode;    data['IsActive'] = this.isActive;    data['LastModifiedOn'] = this.lastModifiedOn;    data['UserStore'] = this.userStore;    return data;  }}class Services {  int? rating;  int? overallRating;  int? sumOfViewsCount;  int? sumOfUsedCount;  String? lastUsedDate;  int? id;  String? code;  String? title;  Null? searchKeywords;  String? description;  Null? detail;  int? iUApplicationId;  Null? serviceCategoryIds;  String? url;  int? requestCompletionDurationId;  String? describerIconsIds;  Null? rulesAndConditions;  Null? deliveryChannel;  Null? serviceLevelAgreement;  Null? requiredDocuments;  Null? serviceSteps;  String? icon;  String? iconColor;  Null? guide;  Null? videoUrl;  int? status;  Null? note;  int? priority;  bool? loginRequired;  int? tawkDepartmentId;  String? createdOn;  Null? createdBy;  String? updatedOn;  Null? updatedBy;  Services(      {this.rating,      this.overallRating,      this.sumOfViewsCount,      this.sumOfUsedCount,      this.lastUsedDate,      this.id,      this.code,      this.title,      this.searchKeywords,      this.description,      this.detail,      this.iUApplicationId,      this.serviceCategoryIds,      this.url,      this.requestCompletionDurationId,      this.describerIconsIds,      this.rulesAndConditions,      this.deliveryChannel,      this.serviceLevelAgreement,      this.requiredDocuments,      this.serviceSteps,      this.icon,      this.iconColor,      this.guide,      this.videoUrl,      this.status,      this.note,      this.priority,      this.loginRequired,      this.tawkDepartmentId,      this.createdOn,      this.createdBy,      this.updatedOn,      this.updatedBy});  Services.fromJson(Map<String, dynamic> json) {    rating = json['Rating'];    overallRating = json['OverallRating'];    sumOfViewsCount = json['SumOfViewsCount'];    sumOfUsedCount = json['SumOfUsedCount'];    lastUsedDate = json['LastUsedDate'];    id = json['Id'];    code = json['Code'];    title = json['Title'];    searchKeywords = json['SearchKeywords'];    description = json['Description'];    detail = json['Detail'];    iUApplicationId = json['IUApplicationId'];    serviceCategoryIds = json['ServiceCategoryIds'];    url = json['Url'];    requestCompletionDurationId = json['RequestCompletionDurationId'];    describerIconsIds = json['DescriberIconsIds'];    rulesAndConditions = json['RulesAndConditions'];    deliveryChannel = json['DeliveryChannel'];    serviceLevelAgreement = json['ServiceLevelAgreement'];    requiredDocuments = json['RequiredDocuments'];    serviceSteps = json['ServiceSteps'];    icon = json['Icon'];    iconColor = json['IconColor'];    guide = json['Guide'];    videoUrl = json['VideoUrl'];    status = json['Status'];    note = json['Note'];    priority = json['Priority'];    loginRequired = json['LoginRequired'];    tawkDepartmentId = json['TawkDepartmentId'];    createdOn = json['CreatedOn'];    createdBy = json['CreatedBy'];    updatedOn = json['UpdatedOn'];    updatedBy = json['UpdatedBy'];  }  Map<String, dynamic> toJson() {    final Map<String, dynamic> data = new Map<String, dynamic>();    data['Rating'] = this.rating;    data['OverallRating'] = this.overallRating;    data['SumOfViewsCount'] = this.sumOfViewsCount;    data['SumOfUsedCount'] = this.sumOfUsedCount;    data['LastUsedDate'] = this.lastUsedDate;    data['Id'] = this.id;    data['Code'] = this.code;    data['Title'] = this.title;    data['SearchKeywords'] = this.searchKeywords;    data['Description'] = this.description;    data['Detail'] = this.detail;    data['IUApplicationId'] = this.iUApplicationId;    data['ServiceCategoryIds'] = this.serviceCategoryIds;    data['Url'] = this.url;    data['RequestCompletionDurationId'] = this.requestCompletionDurationId;    data['DescriberIconsIds'] = this.describerIconsIds;    data['RulesAndConditions'] = this.rulesAndConditions;    data['DeliveryChannel'] = this.deliveryChannel;    data['ServiceLevelAgreement'] = this.serviceLevelAgreement;    data['RequiredDocuments'] = this.requiredDocuments;    data['ServiceSteps'] = this.serviceSteps;    data['Icon'] = this.icon;    data['IconColor'] = this.iconColor;    data['Guide'] = this.guide;    data['VideoUrl'] = this.videoUrl;    data['Status'] = this.status;    data['Note'] = this.note;    data['Priority'] = this.priority;    data['LoginRequired'] = this.loginRequired;    data['TawkDepartmentId'] = this.tawkDepartmentId;    data['CreatedOn'] = this.createdOn;    data['CreatedBy'] = this.createdBy;    data['UpdatedOn'] = this.updatedOn;    data['UpdatedBy'] = this.updatedBy;    return data;  }}